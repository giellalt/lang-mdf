# -*- cg-pre-pipe: "$GTHOME/giella-core/scripts/preprocess --abbr=$GTHOME/lang-mdf/tools/preprocess/abbr.txt | hfst-optimised-lookup  $GTHOME/lang-mdf/src/analyser-disamb-gt-desc.hfstol | $GTHOME/giella-core/scripts/lookup2cg" -*-
# Divvun & Giellatekno - open source grammars for Sámi and other languages
# Copyright © 2000-2013 The University of Tromsø 
# http://giellatekno.uit.no & http://divvun.no
#
# This program is free software; you can redistribute and/or modify
# this file under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version. The GNU General Public License
# is found at http://www.gnu.org/licenses/gpl.html. It is
# also available in the file $GTHOME/LICENSE.txt.
#
# Other licensing options are available upon request, please contact
# giellatekno@hum.uit.no or divvun@hum.uit.no

# =============================================================== #
#    M O K S H A  D I S A M B I G U A T O R               
# =============================================================== #
# ================================================================ 




      # =========================================== #
      #      Short table of contents                #
      # =========================================== #

      # Delimiters
      # Tags and sets
      # Disambiguation rules
       # One-cohort disambiguation - cycle 0
       # Local disambiguation - cycles 1 and 2
       # Cycle 1a: Special cases 
       # Cycle 1b: Cleaning up after the special cases
       # Cycle 2: Other local disambiguation 
       # Mapping of COMP-CS<, CC and CS
       # More diambiguation
       # Verb mappings 
       # Disambiguating nouns
       # Mainly mapping-rules   
       # Disambiguating nouns
  	   # Case disambiguation
       # Cycle 3: Global disambiguation 
	   # Cycle 4: Syntactic disambiguation 
	   # Cycle 5: Post-syntactic morphological disambiguation



# =============== #
#!! # DELIMITERS 
# =============== #
SUBREADINGS = LTR ;

DELIMITERS = "<.>" "<!>" "<?>" "<...>" "<¶>"; 

#PARENTHESES = "<$(>" "<$)>" "<$[>" "<$]>" "<${>" "<$}>" "<$«>" "<$»>" ;

# ================== #
#!! # TAGS AND SETS
# ================== #


#!! ## Sets containing lists of tags

SETS

# I define end of clause and beginning of clause in a way so that the file
# may be read both by the CG-2 and the vislcg formalisms.

LIST BOS = (>>>) (<s>);
LIST EOS = (<<<) (</s>);

# CG3 doesn´t function without >>> and <<< !

# Tags declared as single-membered LISTs 
# ======================================

#!! Upper and lower case
LIST Upper = "<[А-ЯЁ][а-яё]*>"r ;
LIST Lower = "<[а-яё]+>"r ;

# We can define sets for common tag clusters
LIST Case = (n sg) (n pl) ; # A set that matches either a Noun Singular or a Noun Plural


#!! * Sets for parts of speech
# ---------------

LIST N = N ;
LIST A = A ;
LIST Adv = Adv ;
LIST V = V ;
LIST Pron = Pron ;

LIST CS = CS ;
LIST CCC = CC ;
SET CC = CCC - ("sihke") ;
SET CC-CS = CC OR CS ;
LIST Po = Po ;
LIST Pr = Pr ;
LIST Pcle = Pcle ;
LIST Num = Num ;
LIST Interj = Interj ;
LIST ABBR = ABBR ;
LIST ACR = ACR ;

LIST CLB = CLB ;
LIST LEFT = LEFT ;
LIST RIGHT = RIGHT ;
LIST WEB = WEB ;
LIST QMARK = """ ; # ADD " FOR SYNTAX COLOURING.
LIST PPUNCT = PUNCT ;
SET PUNCT = PPUNCT - QMARK ;

LIST COMMA = "," ;
LIST ¶ = ¶;
LIST HYPHEN = "-" ;

#LIST V* = V* ;

#!! * Sets for POS sub-categories
# ------------------

LIST Pers = Pers ;
LIST Dem = Dem ;
LIST Interr = Interr ;
LIST Indef = Indef ;
LIST Relator = Relator ;

LIST Recipr = Recipr ;
LIST Refl = Refl ;
LIST Rel = Rel ;
 
LIST Adp = Adp ;

LIST Coll = Coll ;
LIST NomAg = NomAg ;
LIST G3 = G3 ;
LIST Prop = Prop ;

LIST SCONJ = ScSg1 ScSg2 ScSg3 ScPl1 ScPl2 ScPl3 ;
LIST OCONJ = OcSg1 OcSg2 OcSg3 OcPl1 OcPl2 OcPl3 ;

#!! * Sets for Semantic tags
# -------------

LIST Ant = Ant ;
LIST Ani = Ani Sem/Kin Hum Fem Mal Sur ;
LIST Fem = Fem ;
LIST Mal = Mal ;

LIST Obj = Obj ;
LIST Org = Org ;
LIST Plc = Plc ;

LIST Sur = Sur Sem/Sur ;

LIST Time = Time ;
LIST Hum = Hum ;
LIST Date = Date ;


#!! * Sets for Morphosyntactic properties
# --------------------------

LIST Abe = Abe ;
LIST Abl = Abl ;
LIST Cau = Cau ;
LIST Com = Com ;
LIST Cmpr = Cmpr ;
LIST Dat = Dat ;
LIST Ela = Ela ;
LIST Gen = Gen ;
LIST Ill = Ill ;
LIST Ine = Ine ;
LIST Lat = Lat ;
LIST Loc = Loc ;
LIST Nom = Nom ;
LIST Prl = Prl ;
LIST Temp = Temp ;
LIST Tra = Tra ;
LIST Voc = Voc ;

LIST SP = SP ;
LIST Sg = Sg ;
LIST Pl = Pl ;

LIST RCmpnd = RCmpnd ;

LIST Cmpnd = Cmpnd ;
 
LIST SgNomCmp = SgNomCmp ;
 
LIST SgGenCmp = SgGenCmp ;

LIST ShCmp = ShCmp ;

LIST Def = Def ;
LIST Indef = Indef ;

LIST PxSg1 = PxSg1 ;
LIST PxSg2 = PxSg2 ;
LIST PxSg3 = PxSg3 ;
 
LIST PxPl1 = PxPl1 ;
LIST PxPl2 = PxPl2 ;
LIST PxPl3 = PxPl3 ;

LIST Comp = Comp ;
LIST Superl = Superl ;

LIST Attr = Attr ;
LIST Ord = Ord ;

LIST Qst = Qst ;
 
# The ("ge" Pcle) etc. are used in Apertium
LIST Foc = Foc ;
LIST Foc/Гак = Foc/Гак ;
LIST Clt/Га = Clt/Га ;
LIST Clt/Add = Clt/Add ; #-вок, -онга, -Оньге, -ка, -га, -ке
LIST Clt/Cop = Clt/Cop ;

LIST IV = IV ;
LIST TV = TV ;

#LIST Der/Pass = Der/PassL Der/PassS ;

LIST Prs = Prs ;
LIST Prt1 = Prt1;
LIST Prt2 = Prt2;


LIST Cond = Cond ;
LIST Conj = Conj ;
LIST Des = Des ;
LIST Ind = Ind ;
LIST Opt = Opt ;
LIST Prec = Prec ;
LIST Proh = Proh ;
LIST Aux = Aux ;

LIST Imprt = Imprt ;

LIST ScSg1 = ScSg1 ;
LIST ScSg2 = ScSg2 ;
LIST ScSg3 = ScSg3 ;
 
LIST ScPl1 = ScPl1 ;
LIST ScPl2 = ScPl2 ;
LIST ScPl3 = ScPl3 ;

LIST OcSg1 = OcSg1 ;
LIST OcSg2 = OcSg2 ;
LIST OcSg3 = OcSg3 ;
 
LIST OcPl1 = OcPl1 ;
LIST OcPl2 = OcPl2 ;
LIST OcPl3 = OcPl3 ;

LIST Sg1 = Sg1 ;
LIST Sg2 = Sg2 ;
LIST Sg3 = Sg3 ;

LIST Pl1 = Pl1 ;
LIST Pl2 = Pl2 ;
LIST Pl3 = Pl3 ;

LIST Inf = Inf ;
LIST ConNeg = ConNeg ;
LIST Neg = Neg ;

LIST PrfPrc = PrfPrc ;
LIST VGen = VGen ;

LIST PrsPrc = PrsPrc ;
LIST Prc = Prc ; # for deprication
 

LIST Ger = Ger ;
LIST Sup = Sup ;
LIST Actio = Actio ;

LIST SupEla = (infMS/ME cx:ela) (Ger Ela) (Sup Ela) ;#ОмстО
LIST SupLoc = (infMS/ME cx:nom) (Inf Loc) ;#ОмО
LIST GENDEF = (def nsg cx:gen) (def npl cx:gen) (Sg Gen Def) (Pl Gen Def);


LIST Der/PassL = Der/PassL ;
LIST Der/NomAg = Der/NomAg ;
LIST Actor = NomAg Der/NomAg ;
LIST NomAct = NomAct ;
LIST VAbess = VAbess ;

#!! * Sets for Derivation
# ----------


LIST Der/OvOms = Der/OvOms ;

LIST Der/ВтОмО = Der/ВтОмО ;
LIST Der/шка = Der/шка ;
LIST Der/Онь = Der/Онь ;
LIST Der/ай = Der/ай ;
LIST Der/кай = Der/кай ;
LIST Der/I = Der/I ;

LIST Der/MWN = Der/MWN ;
LIST Der/Dimin = Der/Dimin ;
LIST Der/Dem = Der/Dem ; # is this necessary 2020-11-08
LIST Der/Cop = Der/Cop ;
LIST Der/Onj = Der/Onj ;
LIST Der/f = Der/f ;

LIST <vdic> = <vdic> ;

LIST MARXTA = "мархта" ;
LIST ULEMA = "улема" ;
LIST AUX = "эрявомс" ;
LIST CompAdv = "инголе" "инголи" "ингольдень" "меле";
#2013-05-22
LIST NOLAT = "каль" "моль" ;

LIST VERBTAKESkodaCCOMP = "арьсемс" "ваномс" "марямс" "няемс" "няендемс" "няфтемс" "няфтнемс" "содамс" "шарьхкодемс" ;#knows how

LIST Err/Orth = Err/Orth ;
LIST Err/Orth-lowered-final-e-2-ja = Err/Orth-lowered-final-e-2-ja ;
LIST Err/MissingSpace = Err/MissingSpace ;

# Phrasal groups
# --------------

LIST VFIN = Prs Prt1 Prt2 Cond Conj Des Imprt Opt ; 

LIST PX = PxSg1 PxSg2 PxSg3 PxPl1 PxPl2 PxPl3 ;



# Sets
# ====

SET WORD = N | V | A | Pr | Pron | Adv | CC | CS | Interj | Num | ("\?") ;

SET HASCONNEG = V + Aux + Neg + Opt OR V + Aux + Neg + Imprt OR V + Aux + Neg + Ind + Prt1 OR V + Aux + Neg + Ind + Prt2 OR V + Aux + Neg + Conj ;


# Noun sets


# Adjective sets

# Nominal sets



########################                  #########################
########################                  #########################
                        # disambiguation #
########################                  #########################
########################                  #########################

SECTION

SUBSTITUTE (Hom1) (*) TARGET (*) ;
SUBSTITUTE (Hom2) (*) TARGET (*) ;
SUBSTITUTE (Hom3) (*) TARGET (*) ;
SUBSTITUTE (Hom4) (*) TARGET (*) ;
#
SUBSTITUTE (Sem/Mal) (*) TARGET (*) ;
SUBSTITUTE (Sem/Fem) (*) TARGET (*) ;
#
#SUBSTITUTE (TV) (*) TARGET (*) ;
#SUBSTITUTE (IV) (*) TARGET (*) ;


REMOVE Der/MWN ; # If any other reading is possible.
REMOVE Der/Dimin ; # If any other reading is possible.

#!! N ABBR not ABBR
#SELECT N IF (0 ABBR) ; 
# way too strong

#
REMOVE:DisallowOvoms Der/OvOms ;
SELECT:NingeNotNi ("нинге") ;

REMOVE TV IF (0 ("мярьгомс"))(NOT 0 OCONJ) ;

# кой-кона валхнень азондозень
REMOVE Der/Onj IF (NOT 1 N) ;

# Кизонь каникулатнень пингста...
REMOVE Attr IF (0 A + Gen + Attr) (0 N + SP + Gen + Indef) ;

# салтонь куяр vs Да сргозень
REMOVE:VGenIfNoSubsequentN VGen IF (NOT 1 N) ;

# If there is a conjunction followed by a certain cohort of the same CASE as me, choose me.
SELECT $$Case IF (1 CC LINK 1C $$Case) ;

#Ваня марто Марят 
SELECT Pl IF (0 Prop + Pl + Nom + Indef) (-1 MARXTA) (-2 Prop + Sg + Nom + Indef) ;

#Ванят-Марят 
SELECT Pl IF (0 Prop + Pl + Nom + Indef) (-1 HYPHEN) (-2 Prop + Pl + Nom + Indef) ;

SELECT Pcle IF (0 ULEMA) (-1 COMMA) (1 COMMA) ;

# Маря моли сяда малас
REMOVE:NotAgIfOnlySg3 NomAg IF (0 Ind + Prs + ScSg3) (NOT (-1* VFIN BARRIER CLB) OR (1* VFIN BARRIER CLB)) ;
REMOVE:NotNIfOnlySg3 N IF (0 Ind + Prs + ScSg3) (NOT (-1* VFIN BARRIER CLB) OR (1* VFIN BARRIER CLB)) ;
REMOVE:NotAIfOnlySg3 A IF (0 Ind + Prs + ScSg3) (NOT (-1* VFIN BARRIER CLB) OR (1* VFIN BARRIER CLB)) ;
REMOVE:NotPrsPrcIfOnlySg3 PrsPrc IF (0 Ind + Prs + ScSg3) (NOT (-1* VFIN BARRIER CLB) OR (1* VFIN BARRIER CLB)) ;

REMOVE:VerbSg3NotNLat Lat IF (0 NOLAT ) (0 Ind + Prs + ScSg3) ;

# , туманць ушедсь шурокстомома.
REMOVE:NomActIfAdjacentInchVerb NomAct IF ((-1* VFIN BARRIER CLB) OR (1* VFIN BARRIER CLB))(0 Inf + Loc);

# куттнень ваксса няевсть ават.
REMOVE:CopIfVFinBeforeOrAfter Clt/Cop IF ((-1* VFIN BARRIER CLB) OR (1* VFIN BARRIER CLB)) ;
#REMOVE:CopWhenVFinBefore Der/Cop IF (-1 VFIN) ;
#REMOVE:CopWhenVFINAfter Der/Cop IF (1 VFIN) ;

# Валхнень эса марявсь мезень-бъди кенярдема.
REMOVE VFIN IF (0 N + Pl + Gen) ((-1* VFIN BARRIER CLB) OR (1* VFIN BARRIER CLB)) ;

REMOVE IV IF (0 OCONJ) ;


REMOVE:NoOconjIfIV OCONJ IF (0 IV + Imprt + ScPl2 + OcPl3) ; # FlagDiacritics not working 2020-03-15
		   # Аф лама минутада меле шофёрсь и санитарсь састь кафта солдат мархта, синь кандсть кафонц носилкат.

REMOVE:QntWithAbl N IF (0 ("лама") ) (1 N + SP + Abl) ;
		  # Аф лама минутада меле
		  # this will be a problem for compound nouns with Tibetan priests and South American animals.

#REMOVE Gen IF (0 Nom OR Gen) ; # argh fix!
SELECT Gen IF (1 Po OR Adp) ;

SELECT Interj IF (0 Upper) (1 COMMA) ;

# Select the proper noun reading if the current word can be
# a proper noun or a noun, and if it is in upper case, 
# and the previous word is only in lower case
SELECT Prop IF (0 Prop) (0 Upper) (-1 Lower OR COMMA) ;

# Ваня марто Марят has a correlating conjunction марто
SELECT CC IF (0 CC) (-1 Ant + Sg + Nom ) (1 Ant + Pl + Nom ) ;

# ванондан веленьконь вельхкска лиенди самолёттнень мельге и сельмотькшнян.
SELECT CC IF (0 CC) (-* VFIN ) (* VFIN ) ;

## Relator
SELECT Relator If (-1 Gen) (NOT 0 PX) ;

## Number

# Remove Pl
# Синь шарьхкодемасна шобдалгодсь
REMOVE:NoPlIfSubseqSgV Pl If (0 Sg + Nom) (1 Prt1 + ScSg3)  ;

# Remove pronoun readings
# Вдь тинь содасасть:
REMOVE:RmGenIfSubj Gen IF (0 Pron + Pers + Pl2) (1* ScPl2 BARRIER CLB) ;

# Тяфта минь ульхтяма
REMOVE:RmGenIfSubjPl1 Gen IF (0 Pron + Pers + Pl1) (1* ScPl1 BARRIER CLB) ;

# азондомс минь тевонконь колга
REMOVE:NoNomIfSubseqPossessumPl1 Nom IF (0 Pron + Pers + Pl1) (1 PxPl1) ;

# и лятфнетядязь тинь
REMOVE:NoNomIfSubseqPossessumPl2 Nom IF (0 Pron + Pers + Pl2) ((1 PxPl2) OR (-1 OcPl2)) ;


REMOVE:NoNomIfSubseqPossessumPl3 Nom IF (0 Pron + Pers + Pl3) (1 PxPl3) ;

# Сон минь кочкамазь
REMOVE:NoNomPl1IfOc Nom If (0 Pron + Pers + Pl1 + Gen) ((-1* OcPl1 BARRIER CLB) OR (1* OcPl1 BARRIER CLB)) ;

# Select the postposition марто when it is preceded by genitive definite 
#SELECT Po IF (0 MARXTA) (-1 Gen + Def) (1 CLB) ;
SELECT Po IF (0 Po) (-1 Gen + Def) (1 CLB) ;

# Select postposition when it is preceded by genitive possessum
# веленьконь вельхкска 
SELECT Po IF (0 Po) (-1 Gen + PX) ;

# Remove postposition when preceded by def nominative


# Remove ConNeg when preceded by CLB
# тяза лисе кургстонт кодамовок наксада вал
REMOVE:ConNegWhenPrecededByClb ConNeg IF ((-1 CLB) OR (NOT *-1 Aux + Neg BARRIER CLB)) ;

# Remove Interj Neg when followed by
# аф якан
REMOVE Interj + Neg IF (NOT 1 CLB);

# эрь, мольхтяма
REMOVE Interj IF (0 ("эрь")) (NOT 1 CLB);

# эрь, мольхтяма
SELECT Interj IF (0 ("эрь")) (1 COMMA);

# Remove Prl if Sem/Sur
# "Терешко" Sem/Sur SP Prl Indef 
# "Терешков" Sem/Sur Sem/Fem Sg Nom Indef
REMOVE Prl IF (0 Sur) ;

# VERBS

REMOVE:NoIVWhenVTakesClausalObject  IV IF (0 VERBTAKESkodaCCOMP) (1 (",")) (2 ("мезе") OR ("кода"));

REMOVE:NoIVWhenPreceededByObject IV IF (0 SupLoc) (-1 GENDEF);
				 #природать: Минь карматама природать тонафнемонза

# remove 
REMOVE OcSg3 IF (1 Pl + Gen) (2 CLB);
       # азондыне арьсеманень, а сон

REMOVE:NoPrt2WhenShtoba Prt2 IF (0 Conj LINK *0 ("штоба"));
			#

REMOVE:AuxWhenNextInf Der/I IF (0 AUX) (1 Inf) ;
		      # эряви улемс
		      

REMOVE:NoSgIfObjPron OcSg2 IF (0 OcPl2) (1 Pron + Pers + Pl2 + Gen) ; 
		     # и лятфнетядязь тинь

# минь инголькиге ладямазь
# Сон тиемазь минь
REMOVE:NoMimsIfSubseqOcPl1 V IF (0 Pron + Pers + Pl1 + Gen) ((-1* OcPl1 BARRIER CLB) OR (1* OcPl1 BARRIER CLB)) ;

# Сон минь кочкамазь
# кода Христосовок кельгомазь минь
REMOVE:OcSg1IfPl1Obj OcSg1 IF (0 OcPl1) ((-1 Pron + Pers + Pl1 + Gen) OR (1 Pron + Pers + Pl1 + Gen)) ;

# Сон тердедязь, и конашкава козя
REMOVE:NoSgObjPassIfSubjSg OcSg2 IF (-1 Pron + Pers + Sg3 + Nom) (0 OcPl2) (0 ScSg1) ;

# 
REMOVE:NoScPl3IfSubjSg3 ScPl3 IF (0 ScSg3) ((-1* Pron + Pers + Sg3 + Nom BARRIER CLB) OR (1* Pron + Pers + Sg3 + Nom BARRIER CLB)) ;

# Тяда инголе
REMOVE:NoAuxProhIfAblAndNextCompared Proh IF (0 Abl) (1 CompAdv ) ;

REMOVE Po IF (-1 Abl) (0 CompAdv) ;

# Тяфта минь ульхтяма
REMOVE V IF (0 Pron + Pers + Pl1 + Nom) (1* VFIN BARRIER CLB);

# сон пеедезевсь и корхтай:
#REMOVE Pcle IF (-1 N + $$CASE)(1 N + $$CASE);
REMOVE PrsPrc IF (-2C $$SCONJ) (-1 CC) (0 $$SCONJ);

# 
SELECT HASCONNEG IF (0 HASCONNEG)(1 ConNeg);

# илятфкя
REMOVE A IF (0 Der/f + PrfPrc) ;

# илятфкя
REMOVE Prc IF (0 Der/f + PrfPrc) ;

# Cleanup
REMOVE:noterr Err/Orth-lowered-final-e-2-ja ;
REMOVE:noterr Err/Orth ;
